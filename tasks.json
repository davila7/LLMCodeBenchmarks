[
    {
        "description": "Create a function that adds two numbers.",
        "test_cases": [
            {"input": [2, 3], "expected": 5},
            {"input": [-1, 1], "expected": 0},
            {"input": [0, 0], "expected": 0}
        ]
    },
    {
        "description": "Create a function that returns the absolute value of a number.",
        "test_cases": [
            {"input": -5, "expected": 5},
            {"input": 10, "expected": 10},
            {"input": 0, "expected": 0}
        ]
    },
    {
        "description": "Create a function that capitalizes the first letter of each word in a string.",
        "test_cases": [
            {"input": "hello world", "expected": "Hello World"},
            {"input": "python programming", "expected": "Python Programming"},
            {"input": "", "expected": ""}
        ]
    },
    {
        "description": "Create a function that returns the Fibonacci number at a given position using iteration.",
        "test_cases": [
            {"input": 0, "expected": 0},
            {"input": 1, "expected": 1},
            {"input": 5, "expected": 5},
            {"input": 10, "expected": 55}
        ]
    },
    {
        "description": "Create a function that checks if all characters in a string are unique.",
        "test_cases": [
            {"input": "abcdef", "expected": true},
            {"input": "hello", "expected": false},
            {"input": "", "expected": true},
            {"input": "AaBbCc", "expected": true}
        ]
    },
    {
        "description": "Create a function that counts the number of words in a string.",
        "test_cases": [
            {"input": "hello world", "expected": 2},
            {"input": "one two three four", "expected": 4},
            {"input": "", "expected": 0},
            {"input": "OpenAI", "expected": 1}
        ]
    },
    {
        "description": "Create a function that reverses the words in a sentence.",
        "test_cases": [
            {"input": "hello world", "expected": "world hello"},
            {"input": "OpenAI is amazing", "expected": "amazing is OpenAI"},
            {"input": "", "expected": ""},
            {"input": "a b c", "expected": "c b a"}
        ]
    },
    {
        "description": "Create a function that checks if a string is an anagram of another string.",
        "test_cases": [
            {"input": ["listen", "silent"], "expected": true},
            {"input": ["triangle", "integral"], "expected": true},
            {"input": ["apple", "pale"], "expected": false}
        ]
    },
    {
        "description": "Create a function that finds the greatest common divisor (GCD) of two numbers.",
        "test_cases": [
            {"input": [48, 18], "expected": 6},
            {"input": [101, 103], "expected": 1},
            {"input": [0, 10], "expected": 10},
            {"input": [7, 0], "expected": 7}
        ]
    },
    {
        "description": "Create a function that sorts a list of dictionaries by a key.",
        "test_cases": [
            {
                "input": [
                    [{"name": "John", "age": 30}, {"name": "Alice", "age": 25}, {"name": "Bob", "age": 20}],
                    "age"
                ],
                "expected": [{"name": "Bob", "age": 20}, {"name": "Alice", "age": 25}, {"name": "John", "age": 30}]
            },
            {
                "input": [
                    [{"name": "John", "age": 30}, {"name": "Alice", "age": 25}, {"name": "Bob", "age": 35}],
                    "name"
                ],
                "expected": [{"name": "Alice", "age": 25}, {"name": "Bob", "age": 35}, {"name": "John", "age": 30}]
            }
        ]
    },
    {
        "description": "Create a function that computes the factorial of a number using recursion.",
        "test_cases": [
            {"input": 5, "expected": 120},
            {"input": 0, "expected": 1},
            {"input": 1, "expected": 1},
            {"input": 3, "expected": 6}
        ]
    },
    {
        "description": "Create a function that determines if a number is a perfect number.",
        "test_cases": [
            {"input": 6, "expected": true},
            {"input": 28, "expected": true},
            {"input": 12, "expected": false},
            {"input": 496, "expected": true}
        ]
    },
    {
        "description": "Create a function that solves the N-Queens problem for a given N.",
        "test_cases": [
            {"input": 4, "expected": [[[1,3],[2,1],[3,4],[4,2]], [[1,2],[2,4],[3,1],[4,3]]]},
            {"input": 1, "expected": [[[1,1]]]}
        ]
    },
    {
        "description": "Create a function that finds the shortest path in a maze represented by a 2D grid. #Example input: [[[0, 1, 0, 0],[0, 1, 0, 1],[0, 0, 0, 0],[1, 1, 1, 0]]]",
        "test_cases": [
            {
                "input": [[
                    [0, 1, 0, 0],
                    [0, 1, 0, 1],
                    [0, 0, 0, 0],
                    [1, 1, 1, 0]
                ]],
                "expected": 7
            }
        ]
    },
    {
        "description": "Create a function that implements the quicksort algorithm. #example input: [3,6,8,10,1,2,1]",
        "test_cases": [
            {"input": [3,6,8,10,1,2,1], "expected": [1,1,2,3,6,8,10]},
            {"input": [], "expected": []}
        ]
    },
    {
        "description": "Create a function that finds the number of islands in a given 2D grid. #example input: [[[1, 1, 0, 0, 0], [1, 1, 0, 0, 0], [0, 0, 1, 0, 0], [0, 0, 0, 1, 1]]]",
        "test_cases": [
            {
                "input": [[
                    [1,1,0,0,0],
                    [1,1,0,0,0],
                    [0,0,1,0,0],
                    [0,0,0,1,1]
                ]],
                "expected": 3
            }
        ]
    },
    {
        "description": "Create a function that evaluates a mathematical expression given in string notation.",
        "test_cases": [
            {"input": "2+3*5", "expected": 17},
            {"input": "10/2-3", "expected": 2},
            {"input": "(1+2)*(3+4)", "expected": 21}
        ]
    },
    {
        "description": "Create a function that determines if a string is a valid IPv4 address.",
        "test_cases": [
            {"input": "192.168.1.1", "expected": true},
            {"input": "255.255.255.255", "expected": true},
            {"input": "256.256.256.256", "expected": false},
            {"input": "192.168.1", "expected": false}
        ]
    },
    {
        "description": "Create a function that implements the merge sort algorithm. #Example input: [5,2,4,6,1,3]",
        "test_cases": [
            {"input": [5,2,4,6,1,3], "expected": [1,2,3,4,5,6]},
            {"input": [10,9,8,7], "expected": [7,8,9,10]}
        ]
    },
    {
        "description": "Create a function that detects cycles in a directed graph. #Example input: [[1,2],[2,3],[3,4],[4,2]]",
        "test_cases": [
            {"input": [[1,2],[2,3],[3,4],[4,2]], "expected": true},
            {"input": [[1,2],[2,3],[3,4]], "expected": false}
        ]
    }
]
